// Code generated by "go-enum-codegen -type MyEnum -error-on-unknown"; DO NOT EDIT.

package myenum

import (
	"database/sql/driver"
	"fmt"
	"strconv"
)

// Scan implements sql.Scanner for MyEnum
func (m *MyEnum) Scan(value interface{}) error {
	i, ok := value.(int)
	if !ok {
		return fmt.Errorf("failed to scan MyEnum value: expected type `int`, got `%T`", value)
	}
	switch i {
	case 0, 1, 2, 3:
		*m = MyEnum(i)
	default:
		return fmt.Errorf("failed to scan MyEnum value: unrecognized value `%v`", i)
	}

	return nil
}

// Value implements driver.Valuer for MyEnum
func (m MyEnum) Value() (driver.Value, error) {
	return int(m), nil
}

// UnmarshalJSON implements json.Unmarshaler for MyEnum
func (m *MyEnum) UnmarshalJSON(data []byte) error {
	str := string(data)
	v, err := strconv.ParseInt(str, 10, 64)
	if err != nil {
		return fmt.Errorf("failed to unmarshal MyEnum value: could not convert `[]byte` to `int`: %v", err)
	}
	i := int(v)
	switch i {
	case 0, 1, 2, 3:
		*m = MyEnum(i)
	default:
		return fmt.Errorf("failed to unmarshal MyEnum value: unrecognized value `%v`", i)
	}

	return nil
}

// MarshalJSON implements json.Marshaler for MyEnum
func (m MyEnum) MarshalJSON() ([]byte, error) {
	return []byte(fmt.Sprintf("%d", int(m))), nil
}
